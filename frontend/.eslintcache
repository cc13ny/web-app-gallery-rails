[{"/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/index.js":"1","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/store/configureStore.js":"2","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Board.jsx":"3","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/store/configureStore.dev.js":"4","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/actions/lists.js":"5","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Cards/CardsContainer.jsx":"6","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/reducers/index.js":"7","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Cards/Cards.jsx":"8","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/constants.js":"9","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/reducers/lists.js":"10","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Cards/DraggableCard.jsx":"11","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Cards/Card.jsx":"12"},{"size":1293,"mtime":1609603309698,"results":"13","hashOfConfig":"14"},{"size":232,"mtime":1481228601000,"results":"15","hashOfConfig":"14"},{"size":3588,"mtime":1609617402000,"results":"16","hashOfConfig":"14"},{"size":1138,"mtime":1609439936262,"results":"17","hashOfConfig":"14"},{"size":1535,"mtime":1481228601000,"results":"18","hashOfConfig":"14"},{"size":4129,"mtime":1609615076442,"results":"19","hashOfConfig":"14"},{"size":282,"mtime":1609439936259,"results":"20","hashOfConfig":"14"},{"size":6676,"mtime":1609615076449,"results":"21","hashOfConfig":"14"},{"size":247,"mtime":1481228601000,"results":"22","hashOfConfig":"14"},{"size":1602,"mtime":1609611749719,"results":"23","hashOfConfig":"14"},{"size":2905,"mtime":1609615281973,"results":"24","hashOfConfig":"14"},{"size":2033,"mtime":1609572227366,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"bvook0",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/index.js",[],["56","57"],"/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/store/configureStore.js",[],"/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Board.jsx",[],"/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/store/configureStore.dev.js",[],"/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/actions/lists.js",[],"/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Cards/CardsContainer.jsx",[],"/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/reducers/index.js",["58"],"import { combineReducers } from 'redux';\n// import {\n//   routerReducer\n// } from 'react-router-redux';\n\nimport lists from './lists';\n\n\n// const rootReducer = combineReducers({\n//   routing: routerReducer,\n//   lists,\n// });\n\nconst rootReducer = lists;\n\nexport default rootReducer;\n","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Cards/Cards.jsx",["59","60"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {useDrop} from 'react-dnd';\nimport { findDOMNode } from 'react-dom';\n\nimport Card from './DraggableCard';\nimport { CARD_HEIGHT, CARD_MARGIN, OFFSET_HEIGHT } from '../../../constants.js';\n\nfunction getPlaceholderIndex(y, scrollY) {\n  // shift placeholder if y position more than card height / 2\n  const yPos = y - OFFSET_HEIGHT + scrollY;\n  let placeholderIndex;\n  if (yPos < CARD_HEIGHT / 2) {\n    placeholderIndex = -1; // place at the start\n  } else {\n    placeholderIndex = Math.floor((yPos - CARD_HEIGHT / 2) / (CARD_HEIGHT + CARD_MARGIN));\n  }\n  return placeholderIndex;\n}\n\n// const specs = {\n//   drop(props, monitor, component) {\n//     document.getElementById(monitor.getItem().id).style.display = 'block';\n//     const { placeholderIndex } = component.state;\n//     const lastX = monitor.getItem().x;\n//     const lastY = monitor.getItem().y;\n//     const nextX = props.x;\n//     let nextY = placeholderIndex;\n//\n//     if (lastY > nextY) { // move top\n//       nextY += 1;\n//     } else if (lastX !== nextX) { // insert into another list\n//       nextY += 1;\n//     }\n//\n//     if (lastX === nextX && lastY === nextY) { // if position equel\n//       return;\n//     }\n//\n//     props.moveCard(lastX, lastY, nextX, nextY);\n//   },\n//   hover(props, monitor, component) {\n//     // defines where placeholder is rendered\n//     const placeholderIndex = getPlaceholderIndex(\n//       monitor.getClientOffset().y,\n//       findDOMNode(component).scrollTop\n//     );\n//\n//     // horizontal scroll\n//     if (!props.isScrolling) {\n//       if (window.innerWidth - monitor.getClientOffset().x < 200) {\n//         props.startScrolling('toRight');\n//       } else if (monitor.getClientOffset().x < 200) {\n//         props.startScrolling('toLeft');\n//       }\n//     } else {\n//       if (window.innerWidth - monitor.getClientOffset().x > 200 &&\n//           monitor.getClientOffset().x > 200\n//       ) {\n//         props.stopScrolling();\n//       }\n//     }\n//\n//     // IMPORTANT!\n//     // HACK! Since there is an open bug in react-dnd, making it impossible\n//     // to get the current client offset through the collect function as the\n//     // user moves the mouse, we do this awful hack and set the state (!!)\n//     // on the component from here outside the component.\n//     // https://github.com/gaearon/react-dnd/issues/179\n//     component.setState({ placeholderIndex });\n//\n//     // when drag begins, we hide the card and only display cardDragPreview\n//     const item = monitor.getItem();\n//     document.getElementById(item.id).style.display = 'none';\n//   }\n// };\n\nCards.propTypes = {\n  // connectDropTarget: PropTypes.func.isRequired,\n  x: PropTypes.number.isRequired,\n  cards: PropTypes.array.isRequired,\n  moveCard: PropTypes.func.isRequired,\n  isOver: PropTypes.bool,\n  canDrop: PropTypes.bool,\n  isScrolling: PropTypes.bool,\n  startScrolling: PropTypes.func,\n  stopScrolling: PropTypes.func\n  // item: PropTypes.object\n}\n\nexport default function Cards(props) {\n  const [placeholderIndex, setPlaceholderIndex] = useState(-1);\n  // const [isScrolling, setIsScrolling] = useState(false);\n\n  const { x, cards, isOver, canDrop } = props;\n\n  const [, drop] = useDrop({\n    accept: 'card',\n    drop: (dropItem, monitor) => {\n      document.getElementById(monitor.getItem().id).style.display = 'block';\n      const lastX = dropItem.x;\n      const lastY = dropItem.y;\n      const nextX = props.x;\n      let nextY = placeholderIndex;\n\n      if (lastY > nextY) { // move top\n        nextY += 1;\n      } else if (lastX !== nextX) { // insert into another list\n        nextY += 1;\n      }\n\n      if (lastX === nextX && lastY === nextY) { // if position equal\n        return;\n      }\n\n      props.moveCard(lastX, lastY, nextX, nextY);\n    },\n    hover: (hoverItem, monitor) => {\n      // defines where placeholder is rendered\n      const placeholderIndex = getPlaceholderIndex(\n          monitor.getClientOffset().y,\n          findDOMNode(monitor).scrollTop\n      );\n\n      // horizontal scroll\n      if (props.isScrolling) {\n        if (window.innerWidth - monitor.getClientOffset().x > 200 &&\n            monitor.getClientOffset().x > 200\n        ) {\n          props.stopScrolling();\n        }\n      } else {\n        if (window.innerWidth - monitor.getClientOffset().x < 200) {\n          props.startScrolling('toRight');\n        } else if (monitor.getClientOffset().x < 200) {\n          props.startScrolling('toLeft');\n        }\n      }\n\n      // // IMPORTANT!\n      // // HACK! Since there is an open bug in react-dnd, making it impossible\n      // // to get the current client offset through the collect function as the\n      // // user moves the mouse, we do this awful hack and set the state (!!)\n      // // on the component from here outside the component.\n      // // https://github.com/gaearon/react-dnd/issues/179\n      // component.setState({ placeholderIndex });\n\n      // when drag begins, we hide the card and only display cardDragPreview\n      // const item = monitor.getItem();\n      document.getElementById(hoverItem.id).style.display = 'none';\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  })\n\n  let isPlaceHold = false;\n  let cardList = [];\n\n  cards.forEach((card, i) => {\n    if (isOver && canDrop) {\n      isPlaceHold = false;\n      if (i === 0 && placeholderIndex === -1) {\n        cardList.push(<div key=\"placeholder\" className=\"item placeholder\" />);\n      } else if (placeholderIndex > i) {\n        isPlaceHold = true;\n      }\n    }\n    if (card !== undefined) {\n      cardList.push(\n        <Card x={x} y={i}\n          item={card}\n          key={card.id}\n          stopScrolling={props.stopScrolling}\n        />\n      );\n    }\n    if (isOver && canDrop && placeholderIndex === i) {\n      cardList.push(<div key=\"placeholder\" className=\"item placeholder\" />);\n    }\n  });\n\n  // if placeholder index is greater than array.length, display placeholder as last\n  if (isPlaceHold) {\n    cardList.push(<div key=\"placeholder\" className=\"item placeholder\" />);\n  }\n\n  // if there is no items in cards currently, display a placeholder anyway\n  if (isOver && canDrop && cards.length === 0) {\n    cardList.push(<div key=\"placeholder\" className=\"item placeholder\" />);\n  }\n\n  return (\n    <div className=\"desk-items\" ref={drop}>\n      {cardList}\n    </div>\n  );\n}\n\n// export default DropTarget('card', specs, (connectDragSource, monitor) => ({\n//   connectDropTarget: connectDragSource.dropTarget(),\n//   isOver: monitor.isOver(),\n//   canDrop: monitor.canDrop(),\n//   item: monitor.getItem()\n// }))(Cards)","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/constants.js",[],"/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/reducers/lists.js",["61"],"import { Record } from 'immutable';\n\nimport {\n  GET_LISTS_START,\n  GET_LISTS,\n  MOVE_CARD,\n  MOVE_LIST,\n  TOGGLE_DRAGGING\n} from '../actions/lists';\n\n/* eslint-disable new-cap */\nconst InitialState = Record({\n  isFetching: false,\n  lists: [],\n  isDragging: false\n});\n/* eslint-enable new-cap */\nconst initialState = new InitialState;\n\nexport default function lists(state = initialState, action) {\n  switch (action.type) {\n    case GET_LISTS_START:\n      return state.set('isFetching', true);\n    case GET_LISTS:\n      return state.withMutations((ctx) => {\n        ctx.set('isFetching', false).set('lists', action.lists);\n      });\n    case MOVE_CARD: {\n      const newLists = [...state.lists];\n      const { lastX, lastY, nextX, nextY } = action;\n      if (lastX === nextX) {\n        newLists[lastX].cards.splice(nextY, 0, newLists[lastX].cards.splice(lastY, 1)[0]);\n      } else {\n        // move element to new place\n        newLists[nextX].cards.splice(nextY, 0, newLists[lastX].cards[lastY]);\n        // delete element from old place\n        newLists[lastX].cards.splice(lastY, 1);\n      }\n      return state.withMutations((ctx) => {\n        ctx.set('lists', newLists);\n      });\n    }\n    case MOVE_LIST: {\n      const newLists = [...state.lists];\n      const { lastX, nextX } = action;\n      const t = newLists.splice(lastX, 1)[0];\n\n      newLists.splice(nextX, 0, t);\n\n      return state.withMutations((ctx) => {\n        ctx.set('lists', newLists);\n      });\n    }\n    case TOGGLE_DRAGGING: {\n      return state.set('isDragging', action.isDragging);\n    }\n    default:\n      return state;\n  }\n}\n","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Cards/DraggableCard.jsx",["62"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { useDrag} from 'react-dnd';\n// import { getEmptyImage } from 'react-dnd-html5-backend';\n\nimport Card from './Card';\n\n\nfunction getStyles(isDragging) {\n  return {\n    display: isDragging ? 0.5 : 1\n  };\n}\n\n// const cardSource = {\n//   beginDrag(props, monitor, component) {\n//     // dispatch to redux store that drag is started\n//     const { item, x, y } = props;\n//     const { id, title } = item;\n//     const { clientWidth, clientHeight } = findDOMNode(component);\n//\n//     return { id, title, item, x, y, clientWidth, clientHeight };\n//   },\n//   endDrag(props, monitor) {\n//     document.getElementById(monitor.getItem().id).style.display = 'block';\n//     props.stopScrolling();\n//   },\n//   isDragging(props, monitor) {\n//     const isDragging = props.item && props.item.id === monitor.getItem().id;\n//     return isDragging;\n//   }\n// };\n\n// options: 4rd param to DragSource https://gaearon.github.io/react-dnd/docs-drag-source.html\nconst OPTIONS = {\n  arePropsEqual: function arePropsEqual(props, otherProps) {\n    let isEqual = true;\n    if (props.item.id === otherProps.item.id &&\n        props.x === otherProps.x &&\n        props.y === otherProps.y\n       ) {\n      isEqual = true;\n    } else {\n      isEqual = false;\n    }\n    return isEqual;\n  }\n};\n\n// function collectDragSource(connectDragSource, monitor) {\n//   return {\n//     connectDragSource: connectDragSource.dragSource(),\n//     connectDragPreview: connectDragSource.dragPreview(),\n//     isDragging: monitor.isDragging()\n//   };\n// }\n\nCardComponent.propTypes = {\n  item: PropTypes.object,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDragPreview: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number,\n  stopScrolling: PropTypes.func\n}\n\nexport default function CardComponent(props) {\n  // useEffect(() => {\n  //   props.connectDragPreview(getEmptyImage(), {\n  //     captureDraggingState: true\n  //   });\n  // });\n\n  const { item, x, y } = props;\n\n  const [{isDragging}, drag] = useDrag({\n    item: { type: 'card' },\n    begin: (_) => {\n      // dispatch to redux store that drag is started\n      const { id, title } = item;\n      const { clientWidth, clientHeight } = findDOMNode(item);\n\n      return { id, title, item, x, y, clientWidth, clientHeight };\n    },\n    end: (item, monitor) => {\n      document.getElementById(item.id).style.display = 'block';\n      props.stopScrolling();\n    },\n    isDragging: (monitor) => {\n      return (props.item && props.item.id === item.id);\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  return <Card ref={drag} style={getStyles(isDragging)} item={item} />;\n}\n\n// export default DragSource('card', cardSource, collectDragSource, OPTIONS)(CardComponent)\n","/Users/bchen/Downloads/Documents/Projects/web-app-gallery-rails/frontend/src/containers/Board/Cards/Card.jsx",["63","64"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst galPng = require('../../../assets/images/gal.png');\nconst delPng = require('../../../assets/images/del.png');\n\nCard.propTypes = {\n  item: PropTypes.object.isRequired,\n  style: PropTypes.object\n};\n\nexport default function Card(props) {\n  const { style, item } = props;\n\n  return (\n    <div style={style} className=\"item\" id={style ? item.id : null}>\n      <div className=\"item-name\">{item.title}</div>\n      <div className=\"item-container\">\n        <div className=\"item-avatar-wrap\">\n          <img src={`https://randomuser.me/api/portraits/med/men/${item.id}.jpg`} alt=\"\" />\n        </div>\n        <div className=\"item-content\">\n          <div className=\"item-author\">{`${item.firstName} ${item.lastName}`}</div>\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Libero, banditos.</p>\n        </div>\n      </div>\n      <div className=\"item-perfomers\">\n        <div className=\"add-perfomers\">\n          <a href=\"#\"><img src={galPng} alt=\"Add perfomers\" /></a>\n          <div className=\"perfomer\">\n            <img\n              src={`https://randomuser.me/api/portraits/thumb/men/${item.id + 1}.jpg`}\n              alt=\"Perfomer\"\n            />\n          </div>\n          <div className=\"perfomer\">\n            <img\n              src={`https://randomuser.me/api/portraits/thumb/men/${item.id + 2}.jpg`}\n              alt=\"Perfomer\"\n            />\n          </div>\n          <div className=\"perfomer\">\n            <img\n              src={`https://randomuser.me/api/portraits/thumb/men/${item.id + 3}.jpg`}\n              alt=\"Perfomer\"\n            />\n          </div>\n        </div>\n        <div className=\"delete-perfomers\">\n          <a href=\"#\"><img src={delPng} alt=\"Delete perfomers\" /></a>\n          <div className=\"perfomer\">\n            <img\n              src={`https://randomuser.me/api/portraits/thumb/men/${item.id + 4}.jpg`}\n              alt=\"Perfomer\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":92,"column":28,"nodeType":"71","messageId":"72","endLine":92,"endColumn":47},{"ruleId":"69","severity":1,"message":"74","line":120,"column":13,"nodeType":"71","messageId":"72","endLine":120,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":18,"column":22,"nodeType":"77","messageId":"78","endLine":18,"endColumn":38,"fix":"79"},{"ruleId":"69","severity":1,"message":"80","line":36,"column":7,"nodeType":"71","messageId":"72","endLine":36,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":29,"column":11,"nodeType":"83","endLine":29,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":50,"column":11,"nodeType":"83","endLine":50,"endColumn":23},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","'setPlaceholderIndex' is assigned a value but never used.","'placeholderIndex' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"86","text":"87"},"'OPTIONS' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",[332,332],"()"]